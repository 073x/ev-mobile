{"version":3,"sources":["StripeProvider.tsx"],"names":["EXPO_PARTNER_ID","appInfo","name","pjson","url","repository","version","partnerId","undefined","initStripe","params","extendedParams","NativeStripeSdk","initialise","StripeProvider","children","publishableKey","merchantIdentifier","threeDSecureParams","stripeAccountId","urlScheme","isAndroid"],"mappings":"+XAAA,qDAEA,2EACA,mCAOA,mE,yyBAEA,GAAMA,CAAAA,eAAe,CAAG,2BAAxB,CAcA,GAAMC,CAAAA,OAAgB,CAAG,CACvBC,IAAI,CAAE,mCAA2BC,iBAAMD,IAAjC,SAA+CC,iBAAMD,IADpC,CAEvBE,GAAG,CAAED,iBAAME,UAFY,CAGvBC,OAAO,CAAEH,iBAAMG,OAHQ,CAIvBC,SAAS,CAAE,mCAAwBP,eAAxB,CAA0CQ,SAJ9B,CAAzB,CAOO,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,MAAD,CAAoC,CAC5D,GAAMC,CAAAA,cAAgC,gCAAQD,MAAR,MAAgBT,OAAO,CAAPA,OAAhB,EAAtC,CACAW,yBAAgBC,UAAhB,CAA2BF,cAA3B,EACD,CAHM,C,8BAyBA,QAASG,CAAAA,cAAT,MAOG,IANRC,CAAAA,QAMQ,MANRA,QAMQ,CALRC,cAKQ,MALRA,cAKQ,CAJRC,kBAIQ,MAJRA,kBAIQ,CAHRC,kBAGQ,MAHRA,kBAGQ,CAFRC,eAEQ,MAFRA,eAEQ,CADRC,SACQ,MADRA,SACQ,CACR,qBAAU,UAAM,CACd,GAAIJ,cAAc,GAAK,EAAvB,CAA2B,CACzB,OACD,CACD,GAAIK,kBAAJ,CAAe,CACbT,yBAAgBC,UAAhB,CAA2B,CACzBG,cAAc,CAAdA,cADyB,CAEzBf,OAAO,CAAPA,OAFyB,CAGzBkB,eAAe,CAAfA,eAHyB,CAIzBD,kBAAkB,CAAlBA,kBAJyB,CAKzBE,SAAS,CAATA,SALyB,CAA3B,EAOD,CARD,IAQO,CACLR,yBAAgBC,UAAhB,CAA2B,CACzBG,cAAc,CAAdA,cADyB,CAEzBf,OAAO,CAAPA,OAFyB,CAGzBkB,eAAe,CAAfA,eAHyB,CAIzBD,kBAAkB,CAAlBA,kBAJyB,CAKzBD,kBAAkB,CAAlBA,kBALyB,CAMzBG,SAAS,CAATA,SANyB,CAA3B,EAQD,CACF,CAtBD,CAsBG,CACDJ,cADC,CAEDC,kBAFC,CAGDE,eAHC,CAIDD,kBAJC,CAKDE,SALC,CAtBH,EA8BA,MAAO,2DAAGJ,cAAc,CAAGD,QAAH,CAAc,IAA/B,CAAP,CACD","sourcesContent":["import React, { useEffect } from 'react';\n\nimport NativeStripeSdk from '../NativeStripeSdk';\nimport { isAndroid, shouldAttributeExpo } from '../helpers';\nimport type {\n  AppInfo,\n  ThreeDSecureConfigurationParams,\n  InitStripeParams,\n  InitialiseParams,\n} from '../types';\nimport pjson from '../../package.json';\n\nconst EXPO_PARTNER_ID = 'pp_partner_JBN7LkABco2yUu';\n\n/**\n *  Stripe Provider Component Props\n */\nexport interface Props {\n  publishableKey: string;\n  merchantIdentifier?: string;\n  threeDSecureParams?: ThreeDSecureConfigurationParams;\n  stripeAccountId?: string;\n  children: React.ReactElement | React.ReactElement[];\n  urlScheme?: string;\n}\n\nconst appInfo: AppInfo = {\n  name: shouldAttributeExpo() ? `${pjson.name}/expo` : pjson.name,\n  url: pjson.repository,\n  version: pjson.version,\n  partnerId: shouldAttributeExpo() ? EXPO_PARTNER_ID : undefined,\n};\n\nexport const initStripe = (params: InitStripeParams): void => {\n  const extendedParams: InitialiseParams = { ...params, appInfo };\n  NativeStripeSdk.initialise(extendedParams);\n};\n\n/**\n *  StripeProvider Component\n *\n * @example\n * ```ts\n *  <StripeProvider\n *    publishableKey=\"_publishableKey\"\n *    merchantIdentifier=\"merchant.com.stripe.react.native\"\n *    threeDSecureParams={{\n *      backgroundColor: \"#FFF\",\n *      timeout: 5,\n *    }}\n *  >\n *    <App />\n *  </StripeProvider>\n * ```\n * @param __namedParameters Props\n * @returns JSX.Element\n * @category ReactComponents\n */\nexport function StripeProvider({\n  children,\n  publishableKey,\n  merchantIdentifier,\n  threeDSecureParams,\n  stripeAccountId,\n  urlScheme,\n}: Props) {\n  useEffect(() => {\n    if (publishableKey === '') {\n      return;\n    }\n    if (isAndroid) {\n      NativeStripeSdk.initialise({\n        publishableKey,\n        appInfo,\n        stripeAccountId,\n        threeDSecureParams,\n        urlScheme,\n      });\n    } else {\n      NativeStripeSdk.initialise({\n        publishableKey,\n        appInfo,\n        stripeAccountId,\n        threeDSecureParams,\n        merchantIdentifier,\n        urlScheme,\n      });\n    }\n  }, [\n    publishableKey,\n    merchantIdentifier,\n    stripeAccountId,\n    threeDSecureParams,\n    urlScheme,\n  ]);\n\n  return <>{publishableKey ? children : null}</>;\n}\n"]}