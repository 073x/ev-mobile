{"version":3,"sources":["withStripe.ts"],"names":["AndroidConfig","Manifest","addMetaDataItemToMainApplication","getMainApplicationOrThrow","removeMetaDataItemFromMainApplication","pkg","require","withStripe","config","props","withStripeIos","withStripeAndroid","expoConfig","merchantIdentifier","modResults","setApplePayEntitlement","merchantIdentifiers","entitlements","key","merchants","Array","isArray","id","includes","push","enableGooglePay","setGooglePayMetaData","enabled","GOOGLE_PAY_META_NAME","mainApplication","name","version"],"mappings":"wLAAA,mD,qpCAYIA,6BAAcC,Q,CAHhBC,gC,uBAAAA,gC,CACAC,yB,uBAAAA,yB,CACAC,qC,uBAAAA,qC,CAGF,GAAMC,CAAAA,GAAG,CAAGC,OAAO,CAAC,kCAAD,CAAnB,CAWA,GAAMC,CAAAA,UAA2C,CAAG,QAA9CA,CAAAA,UAA8C,CAACC,MAAD,CAASC,KAAT,CAAmB,CACrED,MAAM,CAAGE,aAAa,CAACF,MAAD,CAASC,KAAT,CAAtB,CACAD,MAAM,CAAGG,iBAAiB,CAACH,MAAD,CAASC,KAAT,CAA1B,CACA,MAAOD,CAAAA,MAAP,CACD,CAJD,CAMA,GAAME,CAAAA,aAA8C,CAAG,QAAjDA,CAAAA,aAAiD,CACrDE,UADqD,MAGlD,IADDC,CAAAA,kBACC,MADDA,kBACC,CACH,MAAO,yCAAsBD,UAAtB,CAAkC,SAACJ,MAAD,CAAY,CACnDA,MAAM,CAACM,UAAP,CAAoBC,sBAAsB,CACxCF,kBADwC,CAExCL,MAAM,CAACM,UAFiC,CAA1C,CAIA,MAAON,CAAAA,MAAP,CACD,CANM,CAAP,CAOD,CAXD,CAqBO,QAASO,CAAAA,sBAAT,CACLC,mBADK,CAELC,YAFK,CAGgB,uBACrB,GAAMC,CAAAA,GAAG,CAAG,qCAAZ,CAEA,GAAMC,CAAAA,SAAmB,oBAAGF,YAAY,CAACC,GAAD,CAAf,0BAAwB,EAAjD,CAEA,GAAI,CAACE,KAAK,CAACC,OAAN,CAAcL,mBAAd,CAAL,CAAyC,CACvCA,mBAAmB,CAAG,CAACA,mBAAD,CAAtB,CACD,CAED,kDAAiBA,mBAAjB,mCAAsC,IAA3BM,CAAAA,EAA2B,aACpC,GAAI,CAACH,SAAS,CAACI,QAAV,CAAmBD,EAAnB,CAAL,CAA6B,CAC3BH,SAAS,CAACK,IAAV,CAAeF,EAAf,EACD,CACF,CAEDL,YAAY,CAACC,GAAD,CAAZ,CAAoBC,SAApB,CACA,MAAOF,CAAAA,YAAP,CACD,CAED,GAAMN,CAAAA,iBAAkD,CAAG,QAArDA,CAAAA,iBAAqD,CACzDC,UADyD,OAGtD,iCADDa,eACC,CADDA,eACC,gCADiB,KACjB,uBACH,MAAO,uCAAoBb,UAApB,CAAgC,SAACJ,MAAD,CAAY,CACjDA,MAAM,CAACM,UAAP,CAAoBY,oBAAoB,CACtCD,eADsC,CAEtCjB,MAAM,CAACM,UAF+B,CAAxC,CAKA,MAAON,CAAAA,MAAP,CACD,CAPM,CAAP,CAQD,CAZD,CAwBO,QAASkB,CAAAA,oBAAT,CACLC,OADK,CAELb,UAFK,CAGmC,CACxC,GAAMc,CAAAA,oBAAoB,CAAG,2CAA7B,CACA,GAAMC,CAAAA,eAAe,CAAG1B,yBAAyB,CAACW,UAAD,CAAjD,CACA,GAAIa,OAAJ,CAAa,CACXzB,gCAAgC,CAC9B2B,eAD8B,CAE9BD,oBAF8B,CAG9B,MAH8B,CAAhC,CAKD,CAND,IAMO,CACLxB,qCAAqC,CACnCyB,eADmC,CAEnCD,oBAFmC,CAArC,CAID,CAED,MAAOd,CAAAA,UAAP,CACD,C,aAEc,uCAAoBP,UAApB,CAAgCF,GAAG,CAACyB,IAApC,CAA0CzB,GAAG,CAAC0B,OAA9C,C","sourcesContent":["import {\n  AndroidConfig,\n  ConfigPlugin,\n  createRunOncePlugin,\n  withAndroidManifest,\n  withEntitlementsPlist,\n} from '@expo/config-plugins';\n\nconst {\n  addMetaDataItemToMainApplication,\n  getMainApplicationOrThrow,\n  removeMetaDataItemFromMainApplication,\n} = AndroidConfig.Manifest;\n\nconst pkg = require('stripe-react-native/package.json');\n\ntype StripePluginProps = {\n  /**\n   * The iOS merchant ID used for enabling Apple Pay.\n   * Without this, the error \"Missing merchant identifier\" will be thrown on iOS.\n   */\n  merchantIdentifier: string | string[];\n  enableGooglePay: boolean;\n};\n\nconst withStripe: ConfigPlugin<StripePluginProps> = (config, props) => {\n  config = withStripeIos(config, props);\n  config = withStripeAndroid(config, props);\n  return config;\n};\n\nconst withStripeIos: ConfigPlugin<StripePluginProps> = (\n  expoConfig,\n  { merchantIdentifier }\n) => {\n  return withEntitlementsPlist(expoConfig, (config) => {\n    config.modResults = setApplePayEntitlement(\n      merchantIdentifier,\n      config.modResults\n    );\n    return config;\n  });\n};\n\n/**\n * Adds the following to the entitlements:\n *\n * <key>com.apple.developer.in-app-payments</key>\n * <array>\n *\t <string>[MERCHANT_IDENTIFIER]</string>\n * </array>\n */\nexport function setApplePayEntitlement(\n  merchantIdentifiers: string | string[],\n  entitlements: Record<string, any>\n): Record<string, any> {\n  const key = 'com.apple.developer.in-app-payments';\n\n  const merchants: string[] = entitlements[key] ?? [];\n\n  if (!Array.isArray(merchantIdentifiers)) {\n    merchantIdentifiers = [merchantIdentifiers];\n  }\n\n  for (const id of merchantIdentifiers) {\n    if (!merchants.includes(id)) {\n      merchants.push(id);\n    }\n  }\n\n  entitlements[key] = merchants;\n  return entitlements;\n}\n\nconst withStripeAndroid: ConfigPlugin<StripePluginProps> = (\n  expoConfig,\n  { enableGooglePay = false }\n) => {\n  return withAndroidManifest(expoConfig, (config) => {\n    config.modResults = setGooglePayMetaData(\n      enableGooglePay,\n      config.modResults\n    );\n\n    return config;\n  });\n};\n\n/**\n * Adds the following to AndroidManifest.xml:\n *\n * <application>\n *   ...\n *\t <meta-data\n *     android:name=\"com.google.android.gms.wallet.api.enabled\"\n *     android:value=\"true|false\" />\n * </application>\n */\nexport function setGooglePayMetaData(\n  enabled: boolean,\n  modResults: AndroidConfig.Manifest.AndroidManifest\n): AndroidConfig.Manifest.AndroidManifest {\n  const GOOGLE_PAY_META_NAME = 'com.google.android.gms.wallet.api.enabled';\n  const mainApplication = getMainApplicationOrThrow(modResults);\n  if (enabled) {\n    addMetaDataItemToMainApplication(\n      mainApplication,\n      GOOGLE_PAY_META_NAME,\n      'true'\n    );\n  } else {\n    removeMetaDataItemFromMainApplication(\n      mainApplication,\n      GOOGLE_PAY_META_NAME\n    );\n  }\n\n  return modResults;\n}\n\nexport default createRunOncePlugin(withStripe, pkg.name, pkg.version);\n"]}